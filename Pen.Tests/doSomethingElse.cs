using System;
using Xunit;
using System.IO;
using System.Text;
using System.Diagnostics;

namespace Unit_test
{
    public class doSomethingElse_test
    {
        [Fact]

        public void testdoSomethingElseOneParamCtor()
        {
            var pen = new Pen(10);

            using var memoryStream = new MemoryStream();
            TextWriterTraceListener myWriter = new TextWriterTraceListener(memoryStream);
            Trace.Listeners.Add(myWriter);

            pen.doSomethingElse();

            Trace.Flush();

            string result = Encoding.ASCII.GetString(memoryStream.ToArray());

            Assert.Equal("BLUE\r\n", result);
        }

        [Fact]
        public void testdoSomethingElseTwoParamCtor()
        {
            var pen = new Pen(10, 2.5);

            using var memoryStream = new MemoryStream();
            TextWriterTraceListener myWriter = new TextWriterTraceListener(memoryStream);
            Trace.Listeners.Add(myWriter);

            pen.doSomethingElse();

            Trace.Flush();

            string result = Encoding.ASCII.GetString(memoryStream.ToArray());

            Assert.Equal("BLUE\r\n", result);
        }

        [Fact]
        public void testdoSomethingElseThreeParamCtor()
        {
            var pen = new Pen(10, 2.5, "RED");

            using var memoryStream = new MemoryStream();
            TextWriterTraceListener myWriter = new TextWriterTraceListener(memoryStream);
            Trace.Listeners.Add(myWriter);

            pen.doSomethingElse();

            Trace.Flush();

            string result = Encoding.ASCII.GetString(memoryStream.ToArray());

            Assert.Equal("RED\r\n", result);
        }
    }
}

